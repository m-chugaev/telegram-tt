{"version":3,"file":"1158.f3f7158350176d3b082a.js","mappings":"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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useEditorHistory.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.module.scss?b340","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryRibbonButton.tsx","webpack://telegram-t/./src/components/story/StoryRibbon.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/global/selectors/limits.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/MarkdownParser.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  ISettings,\n  MessageList,\n  MessageListType,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEditorHistory from '../middle/composer/hooks/useEditorHistory';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const {\n    saveState: saveHistoryState,\n    clearState: clearHistoryState,\n  } = useEditorHistory(inputRef, getSelectionRange, getHtml, (html) => {\n    if (!inputRef.current || isComposerBlocked) return;\n\n    inputRef.current!.innerHTML = html;\n    inputRef.current!.dispatchEvent(new Event('input', { bubbles: true }));\n  });\n\n  const handleBeforeApplyTextFormat = useLastCallback(() => {\n    saveHistoryState(getHtml());\n  });\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    const selection = window.getSelection()!;\n    let messageInput: HTMLDivElement;\n    if (inInputId === editableInputId) {\n      messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector)!;\n    } else {\n      messageInput = document.getElementById(inInputId) as HTMLDivElement;\n    }\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        insertHtmlInSelection(newHtml);\n        messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n        return;\n      }\n    }\n\n    setHtml(`${getHtml()}${newHtml}`);\n\n    // If selection is outside of input, set cursor at the end of input\n    requestNextMutation(() => {\n      focusEditableElement(messageInput, undefined, true);\n    });\n\n    saveHistoryState(getHtml());\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n    saveHistoryState(getHtml());\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n    saveHistoryState(getHtml());\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n\n    clearHistoryState();\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleEmojiSelect = useLastCallback((emoji: string | ApiSticker, isForce?: any) => {\n    insertEmoji(emoji, isForce);\n    saveHistoryState(getHtml());\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={removeSymbol}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n            beforeApplyTextFormat={handleBeforeApplyTextFormat}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <Icon name=\"schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={handleEmojiSelect}\n            onCustomEmojiSelect={handleEmojiSelect}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n    };\n  },\n)(Composer));\n","import type { RefObject } from '../../../../lib/teact/teact';\nimport {\n  useCallback,\n  useEffect,\n  useState,\n} from '../../../../lib/teact/teact';\n\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst DEFAULT_MAX_ENTRIES = 100;\n\ntype HistoryEntry = {\n  html: string;\n  timestamp: number;\n  selection?: {\n    path: number[];\n    offset: number;\n    isRoot: boolean;\n  };\n};\n\ntype EditorHistory = {\n  entries: HistoryEntry[];\n  currentIndex: number;\n  maxEntries?: number;\n};\n\nfunction useEditorHistory(\n  inputRef: RefObject<HTMLDivElement | null>,\n  getSelectionRange: Signal<Range | undefined>,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n) {\n  const [history, setHistory] = useState<EditorHistory>({\n    entries: [{\n      html: getHtml(),\n      timestamp: Date.now(),\n    }],\n    currentIndex: 0,\n    maxEntries: DEFAULT_MAX_ENTRIES,\n  });\n\n  const getRootLengthOffset = (root: Node | null, offset: number): number => {\n    if (!root) return 0;\n\n    let currentIndex = 0;\n    let length = 0;\n\n    while (currentIndex < offset) {\n      length += root.childNodes[currentIndex]?.textContent?.length ?? 0;\n      currentIndex++;\n    }\n\n    return length;\n  };\n\n  const getNodePath = (node: Node | null, root: Node | null): number[] => {\n    if (!node || !root || !root.contains(node) || node === root) return [];\n\n    const path: number[] = [];\n    let current: Node | null = node;\n\n    while (current && current !== root) {\n      const parent = current.parentNode as Element;\n      if (!parent || parent === root.parentNode) break;\n\n      const index = Array.from(parent.childNodes).indexOf(current as ChildNode);\n      path.unshift(index);\n      current = parent;\n    }\n\n    return path;\n  };\n\n  const findNodeByPath = (root: Node | null, path: number[]): Node | undefined => {\n    if (!root || !path.length) return undefined;\n\n    let current: Node | null = root;\n\n    for (const index of path) {\n      if (!current || !current.childNodes[index]) return undefined;\n      current = current.childNodes[index];\n    }\n\n    return current;\n  };\n\n  const getSelection = useCallback(() => {\n    const selection = getSelectionRange();\n    if (!selection) return undefined;\n\n    const isRoot = selection.endContainer === inputRef.current;\n    if (isRoot) {\n      return {\n        path: [],\n        offset: getRootLengthOffset(inputRef.current, selection.endOffset),\n        isRoot,\n      };\n    }\n\n    const path = getNodePath(selection.endContainer, inputRef.current);\n\n    return {\n      path,\n      offset: selection.endOffset,\n      isRoot,\n    };\n  }, [getSelectionRange, inputRef]);\n\n  const setSelectionToEnd = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (!selection || !inputRef.current || !inputRef.current.lastChild) return;\n\n    const newRange = document.createRange();\n    newRange.setStartAfter(inputRef.current.lastChild as Node);\n    selection.removeAllRanges();\n    selection.addRange(newRange);\n  });\n\n  const updateSelection = useLastCallback((selection: { path: number[]; offset: number; isRoot: boolean }) => {\n    if (!inputRef.current) return;\n\n    if (!selection.isRoot && selection.path.length === 0 && selection.offset === 0 && inputRef.current.lastChild) {\n      setSelectionToEnd();\n      return;\n    }\n\n    if (selection.isRoot && inputRef.current.firstChild) {\n      try {\n        window.getSelection()?.setPosition(inputRef.current.firstChild, selection.offset);\n      } catch {\n        setSelectionToEnd();\n      }\n      return;\n    }\n\n    const node = findNodeByPath(inputRef.current, selection.path);\n    if (!node) {\n      setSelectionToEnd();\n      return;\n    }\n\n    try {\n      window.getSelection()?.setPosition(node, selection.offset);\n    } catch {\n      //\n    }\n  });\n\n  const setEntry = useLastCallback((entry: HistoryEntry) => {\n    setHtml(entry.html);\n    requestNextMutation(() => {\n      if (entry.selection) {\n        updateSelection(entry.selection);\n      }\n    });\n  });\n\n  const canUndo = useLastCallback(() => {\n    return history.currentIndex > 0;\n  });\n\n  const canRedo = useLastCallback(() => {\n    return history.currentIndex < history.entries.length - 1;\n  });\n\n  const undo = useCallback(() => {\n    setHistory((prev) => {\n      const lastEntry = prev.entries[prev.currentIndex];\n      const currentHtml = getHtml();\n      const selection = getSelection();\n\n      if (currentHtml !== lastEntry.html) {\n        setEntry(lastEntry);\n\n        return {\n          ...prev,\n          entries: [...prev.entries.slice(0, prev.currentIndex + 1), {\n            html: currentHtml,\n            timestamp: Date.now(),\n            selection,\n          }],\n        };\n      }\n\n      if (prev.currentIndex <= 0) {\n        return prev;\n      }\n\n      setEntry(prev.entries[prev.currentIndex - 1]);\n\n      return {\n        ...prev,\n        currentIndex: prev.currentIndex - 1,\n      };\n    });\n  }, [getHtml, getSelection, setEntry]);\n\n  const redo = useCallback(() => {\n    setHistory((prev) => {\n      if (prev.currentIndex >= prev.entries.length - 1) return prev;\n\n      setEntry(prev.entries[prev.currentIndex + 1]);\n\n      return {\n        ...prev,\n        currentIndex: prev.currentIndex + 1,\n      };\n    });\n  }, [setEntry]);\n\n  const saveState = useCallback((html: string) => {\n    setHistory((prev) => {\n      // Prevent saving the same state twice\n      const lastEntry = prev.entries[prev.currentIndex];\n      if (html === lastEntry.html) return prev;\n      const newEntries = prev.entries.slice(0, prev.currentIndex + 1);\n\n      newEntries.push({\n        html,\n        timestamp: Date.now(),\n        selection: getSelection(),\n      });\n\n      // Limit the number of entries\n      if (newEntries.length > prev.maxEntries!) {\n        newEntries.shift();\n      }\n\n      return {\n        ...prev,\n        entries: newEntries,\n        currentIndex: newEntries.length - 1,\n      };\n    });\n  }, [getSelection]);\n\n  const processKeyboardShortcuts = useCallback((e: React.KeyboardEvent) => {\n    if (!(e.ctrlKey || e.metaKey)) {\n      return;\n    }\n\n    if (!canRedo() && !canUndo()) {\n      return;\n    }\n\n    if (e.key === 'z') {\n      e.preventDefault();\n      if (e.shiftKey) {\n        redo();\n      } else {\n        undo();\n      }\n    } else if (e.key === 'y' && canRedo()) {\n      e.preventDefault();\n      redo();\n    }\n  }, [undo, redo, canUndo, canRedo]);\n\n  const processKeyboardTriggers = useCallback((e: React.KeyboardEvent) => {\n    // Space\n    if (e.key === ' ') {\n      saveState(getHtml());\n      return;\n    }\n\n    // Delete (Backspace or Delete)\n    if (e.key === 'Backspace' || e.key === 'Delete') {\n      saveState(getHtml());\n      return;\n    }\n\n    // Paste (Ctrl+V or Cmd+V)\n    if ((e.ctrlKey || e.metaKey) && e.key === 'v') {\n      saveState(getHtml());\n      return;\n    }\n\n    // Cut (Ctrl+X or Cmd+X)\n    if ((e.ctrlKey || e.metaKey) && e.key === 'x') {\n      saveState(getHtml());\n    }\n  }, [getHtml, saveState]);\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    processKeyboardShortcuts(e as unknown as React.KeyboardEvent);\n    processKeyboardTriggers(e as unknown as React.KeyboardEvent);\n  });\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  const clearState = useLastCallback(() => {\n    setHistory({\n      entries: [{\n        html: '',\n        timestamp: Date.now(),\n      }],\n      currentIndex: 0,\n      maxEntries: DEFAULT_MAX_ENTRIES,\n    });\n  });\n\n  return {\n    currentState: history.entries[history.currentIndex],\n    saveState,\n    undo,\n    redo,\n    clearState,\n    processKeyboardShortcuts,\n    processKeyboardTriggers,\n  };\n}\n\nexport default useEditorHistory;\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(html: string) {\n  const tempInput = document.createElement('div');\n  tempInput.contentEditable = 'true';\n  tempInput.style.position = 'absolute';\n  tempInput.style.left = '-10000px';\n  tempInput.style.top = '-10000px';\n  tempInput.innerHTML = html;\n  tempInput.className = 'allow-selection'; // Patch for Safari\n  document.body.appendChild(tempInput);\n  let element = tempInput.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n\n  const result = tempInput.innerHTML;\n  document.body.removeChild(tempInput);\n\n  return result;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiPeerColor } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getApiPeerColorClass, getPeerColorClass } from './helpers/peerColor';\n\nimport EmojiIconBackground from './embedded/EmojiIconBackground';\n\nimport styles from './PeerColorWrapper.module.scss';\n\ninterface OwnProps extends React.HTMLAttributes<HTMLDivElement> {\n  peer?: ApiPeer;\n  peerColor?: ApiPeerColor;\n  noUserColors?: boolean;\n  shoudReset?: boolean;\n  className?: string;\n  emojiIconClassName?: string;\n  children: React.ReactNode;\n}\n\nfunction PeerColorWrapper({\n  peer, peerColor, noUserColors, shoudReset, className, emojiIconClassName, children, ...otherProps\n}: OwnProps) {\n  const color = peerColor || peer?.color;\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        peer && getPeerColorClass(peer, noUserColors, shoudReset),\n        peerColor && getApiPeerColorClass(peerColor),\n        className,\n      )}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    >\n      {color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          className={emojiIconClassName}\n          emojiDocumentId={color.backgroundEmojiId}\n        />\n      )}\n      {children}\n    </div>\n  );\n}\n\nexport default memo(PeerColorWrapper);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nRjVJOQv\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  groupStatetefulContent,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction, groupStatetefulContent } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { isApiPeerChat } from '../../../../global/helpers/peers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(oldLang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            oldLang,\n            lastMessage,\n            lastMessageSender && !isApiPeerChat(lastMessageSender) ? lastMessageSender : undefined,\n            lastMessageSender && isApiPeerChat(lastMessageSender) ? lastMessageSender : chat,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getPeerTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n  beforeApplyTextFormat?: () => void;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n  beforeApplyTextFormat,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkStuckInsideSpecialTags(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (!(e.key === 'ArrowRight' || e.key === 'ArrowDown' || (e.key === 'Enter' && e.shiftKey))) return;\n\n    const selection = window.getSelection();\n    if (!selection) return;\n\n    let baseNode = selection.anchorNode as Element;\n    if (!baseNode?.parentNode) return;\n\n    const formattedTags = ['U', 'B', 'I', 'DEL', 'S', 'A'];\n    const specialTags = ['BLOCKQUOTE', 'CODE'];\n    const specialTagClasses = ['spoiler'];\n\n    let parentNode = baseNode.parentNode as Element;\n    let isFormattedNode = formattedTags.includes(parentNode.tagName);\n    let isInSpecialTag = specialTags.includes(parentNode.tagName) || specialTagClasses.includes(parentNode.className);\n    while (!isInSpecialTag && isFormattedNode && baseNode.parentNode && baseNode.parentNode !== inputRef.current) {\n      baseNode = baseNode.parentNode as Element;\n      parentNode = baseNode.parentNode as Element;\n      isFormattedNode = formattedTags.includes(parentNode.tagName);\n      isInSpecialTag = specialTags.includes(parentNode.tagName) || specialTagClasses.includes(parentNode.className);\n    }\n\n    if (!isInSpecialTag) return;\n\n    const range = selection.getRangeAt(0);\n    const isAtEnd = range.endOffset === baseNode.textContent?.length;\n    const isLastNode = !parentNode.nextSibling\n      || (parentNode.nextSibling.nodeType === Node.TEXT_NODE && !parentNode.nextSibling.textContent);\n\n    if (!isAtEnd || !isLastNode) return;\n\n    e.preventDefault();\n\n    const escapeNode = document.createTextNode('\\n');\n    if (parentNode.nextSibling) {\n      inputRef.current?.insertBefore(escapeNode, parentNode.nextSibling);\n    } else {\n      inputRef.current?.appendChild(escapeNode);\n    }\n\n    // Trigger change event to update input height\n    const syntheticEvent = {\n      target: inputRef.current,\n      currentTarget: inputRef.current,\n    } as React.ChangeEvent<HTMLDivElement>;\n    handleChange(syntheticEvent);\n\n    selection.setPosition(escapeNode, 0);\n  }\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n\n    checkStuckInsideSpecialTags(e);\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n        beforeApply={beforeApplyTextFormat}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport { getGiftAttributes, getStickerFromGift } from '../../common/helpers/gifts';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const giftStickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(type) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  function renderStarGiftUnique() {\n    const gift = webPage?.gift;\n    if (!gift || gift.type !== 'starGiftUnique') return undefined;\n\n    const sticker = getStickerFromGift(gift)!;\n    const attributes = getGiftAttributes(gift);\n    const { backdrop, pattern, model } = attributes || {};\n\n    if (!backdrop || !pattern || !model) return undefined;\n\n    const backgroundColors = [backdrop.centerColor, backdrop.edgeColor];\n\n    return (\n      <div\n        className=\"web-page-gift web-page-centered web-page-unique\"\n        onClick={() => handleOpenTelegramLink()}\n      >\n        <div className=\"web-page-unique-background-wrapper\">\n          <RadialPatternBackground\n            className=\"web-page-unique-background\"\n            backgroundColors={backgroundColors}\n            patternColor={backdrop.patternColor}\n            patternIcon={pattern.sticker}\n          />\n        </div>\n        <div ref={giftStickersRef} key={sticker.id} className=\"WebPage--unique-sticker\">\n          <StickerView\n            containerRef={giftStickersRef}\n            sticker={sticker}\n            size={STAR_GIFT_STICKER_SIZE}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          renderStarGiftUnique()\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport { StoryViewerOrigin } from '../../types';\n\nimport { getPeerTitle, isUserId } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  peer: ApiPeer;\n  isArchived?: boolean;\n}\n\nfunction StoryRibbonButton({ peer, isArchived }: OwnProps) {\n  const {\n    openChat,\n    openChatWithInfo,\n    openStoryViewer,\n    toggleStoriesHidden,\n  } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isSelf = 'isSelf' in peer && peer.isSelf;\n  const isChannel = !isUserId(peer.id);\n\n  useStoryPreloader(peer.id);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.story-peer-context-menu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true, isDense: true }));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen) return;\n\n    openStoryViewer({ peerId: peer.id, origin: StoryViewerOrigin.StoryRibbon });\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  const handleSavedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'stories' });\n  });\n\n  const handleArchivedStories = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true, profileTab: 'storiesArchive' });\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleOpenProfile = useLastCallback(() => {\n    openChatWithInfo({ id: peer.id, shouldReplaceHistory: true });\n  });\n\n  const handleArchivePeer = useLastCallback(() => {\n    toggleStoriesHidden({ peerId: peer.id, isHidden: !isArchived });\n  });\n\n  return (\n    <div\n      ref={ref}\n      role=\"button\"\n      data-peer-id={peer.id}\n      tabIndex={0}\n      className={styles.peer}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      <Avatar\n        peer={peer}\n        withStory\n        storyViewerOrigin={StoryViewerOrigin.StoryRibbon}\n        storyViewerMode=\"full\"\n      />\n      <div className={buildClassName(styles.name, peer.hasUnreadStories && styles.name_hasUnreadStory)}>\n        {isSelf ? lang('MyStory') : getPeerTitle(lang, peer)}\n      </div>\n      {contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className={buildClassName('story-peer-context-menu', styles.contextMenu)}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {isSelf ? (\n            <>\n              <MenuItem onClick={handleSavedStories} icon=\"play-story\">\n                {lang('StoryList.Context.SavedStories')}\n              </MenuItem>\n              <MenuItem onClick={handleArchivedStories} icon=\"archive\">\n                {lang('StoryList.Context.ArchivedStories')}\n              </MenuItem>\n            </>\n          ) : (\n            <>\n              {!isChannel && (\n                <MenuItem onClick={handleOpenChat} icon=\"message\">\n                  {lang('SendMessageTitle')}\n                </MenuItem>\n              )}\n              {isChannel ? (\n                <MenuItem onClick={handleOpenProfile} icon=\"channel\">\n                  {lang('ChatList.ContextOpenChannel')}\n                </MenuItem>\n              ) : (\n                <MenuItem onClick={handleOpenProfile} icon=\"user\">\n                  {lang('StoryList.Context.ViewProfile')}\n                </MenuItem>\n              )}\n              <MenuItem\n                onClick={handleArchivePeer}\n                icon={isArchived ? 'unarchive' : 'archive'}\n              >\n                {lang(isArchived ? 'StoryList.Context.Unarchive' : 'StoryList.Context.Archive')}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryRibbonButton);\n","import React, { memo, useRef } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StoryRibbonButton from './StoryRibbonButton';\n\nimport styles from './StoryRibbon.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  className?: string;\n  isClosing?: boolean;\n}\n\ninterface StateProps {\n  orderedPeerIds: string[];\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n}\n\nfunction StoryRibbon({\n  isArchived,\n  className,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  isClosing,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  const fullClassName = buildClassName(\n    styles.root,\n    !orderedPeerIds.length && styles.hidden,\n    isClosing && styles.closing,\n    className,\n    'no-scrollbar',\n  );\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useHorizontalScroll(ref, getIsMobile());\n\n  return (\n    <div\n      ref={ref}\n      id=\"StoryRibbon\"\n      className={fullClassName}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {orderedPeerIds.map((peerId) => {\n        const peer = usersById[peerId] || chatsById[peerId];\n\n        if (!peer) {\n          return undefined;\n        }\n\n        return (\n          <StoryRibbonButton\n            key={peerId}\n            peer={peer}\n            isArchived={isArchived}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isArchived }): StateProps => {\n    const { orderedPeerIds: { active, archived } } = global.stories;\n    const usersById = global.users.byId;\n    const chatsById = global.chats.byId;\n\n    return {\n      orderedPeerIds: isArchived ? archived : active,\n      usersById,\n      chatsById,\n    };\n  },\n)(StoryRibbon));\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import type { ApiLimitType } from '../../api/types';\nimport type { GlobalState } from '../types';\n\nimport { DEFAULT_LIMITS } from '../../config';\nimport { selectIsCurrentUserPremium } from './users';\n\nexport function selectCurrentLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) {\n    return DEFAULT_LIMITS[limit][0];\n  }\n\n  const isPremium = selectIsCurrentUserPremium(global);\n  const { limits } = appConfig;\n\n  // When there are new limits when updating a layer, until we get a new configuration, we must use the default values\n  const value = limits[limit]?.[isPremium ? 1 : 0] ?? DEFAULT_LIMITS[limit][isPremium ? 1 : 0];\n  if (limit === 'dialogFilters') return value + 1; // Server does not count \"All\" as folder, but we need to\n  return value;\n}\n\nexport function selectPremiumLimit<T extends GlobalState>(global: T, limit: ApiLimitType) {\n  const { appConfig } = global;\n  if (!appConfig) return DEFAULT_LIMITS[limit][1];\n\n  const { limits } = appConfig;\n\n  return limits[limit][1];\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist' | 'setEmoticon'\n);\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: {\n            text: action.payload.text,\n            entities: action.payload.entities,\n          },\n        },\n        isTouched: true,\n      };\n    case 'setEmoticon':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          emoticon: action.payload,\n        },\n        isTouched: true,\n      };\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import { ApiMessageEntityTypes } from '../api/types';\n\ninterface MarkdownToken {\n  type: 'text' | 'code' | 'pre' | 'bold' | 'italic' | 'strike' | 'spoiler' | 'emoji' | 'newline' | 'link';\n  content: string;\n  language?: string;\n  documentId?: string;\n  url?: string;\n}\n\nclass MarkdownParser {\n  private pos = 0;\n\n  private tokens: MarkdownToken[] = [];\n\n  private readonly text: string;\n\n  constructor(input: string) {\n    // Pre-process HTML\n    this.text = input\n      .replace(/&nbsp;/g, ' ')\n      .replace(/<div><br[^>]*><\\/div>/g, '\\n')\n      .replace(/<br[^>]*>/g, '\\n')\n      .replace(/<\\/div>\\s*<div>/g, '\\n')\n      .replace(/<div>/g, '\\n')\n      .replace(/<\\/div>/g, '');\n  }\n\n  parse(): string {\n    while (this.pos < this.text.length) {\n      const char = this.peek();\n\n      if (char === '\\n') {\n        this.parseNewline();\n      } else if (this.text.startsWith('```', this.pos)) {\n        this.parseCodeBlock();\n      } else if (char === '`') {\n        this.parseInlineCode();\n      } else if (this.text.startsWith('||', this.pos)) {\n        this.parseSpoiler();\n      } else if (this.text.startsWith('**', this.pos)) {\n        this.parseBold();\n      } else if (this.text.startsWith('__', this.pos)) {\n        this.parseItalic();\n      } else if (this.text.startsWith('~~', this.pos)) {\n        this.parseStrike();\n      } else if (char === '[' && this.text.includes('](customEmoji:', this.pos)) {\n        this.parseCustomEmoji();\n      } else if (char === '[' && this.isValidLinkStart()) {\n        this.parseLink();\n      } else {\n        this.parseText();\n      }\n    }\n\n    return this.tokensToHtml();\n  }\n\n  private peek(n: number = 0): string {\n    return this.text[this.pos + n];\n  }\n\n  private consume(n: number = 1): string {\n    const char = this.text.slice(this.pos, this.pos + n);\n    this.pos += n;\n    return char;\n  }\n\n  private readUntil(delimiter: string): string {\n    const start = this.pos;\n    while (this.pos < this.text.length && !this.text.startsWith(delimiter, this.pos)) {\n      this.pos++;\n    }\n    return this.text.slice(start, this.pos);\n  }\n\n  private parseBold(): void {\n    this.consume(2); // Skip **\n    const content = this.readUntil('**');\n    this.consume(2); // Skip closing **\n\n    this.tokens.push({\n      type: 'bold',\n      content,\n    });\n  }\n\n  private parseItalic(): void {\n    this.consume(2); // Skip __\n    const content = this.readUntil('__');\n    this.consume(2); // Skip closing __\n\n    this.tokens.push({\n      type: 'italic',\n      content,\n    });\n  }\n\n  private parseStrike(): void {\n    this.consume(2); // Skip ~~\n    const content = this.readUntil('~~');\n    this.consume(2); // Skip closing ~~\n\n    this.tokens.push({\n      type: 'strike',\n      content,\n    });\n  }\n\n  private parseSpoiler(): void {\n    this.consume(2); // Skip ||\n    const content = this.readUntil('||');\n    this.consume(2); // Skip closing ||\n\n    this.tokens.push({\n      type: 'spoiler',\n      content,\n    });\n  }\n\n  private parseCustomEmoji(): void {\n    // Skip [\n    this.consume();\n    const alt = this.readUntil(']');\n    // Skip ](customEmoji:\n    this.consume(13);\n    const documentId = this.readUntil(')');\n    // Skip )\n    this.consume();\n\n    this.tokens.push({\n      type: 'emoji',\n      content: alt,\n      documentId,\n    });\n  }\n\n  private parseText(): void {\n    let content = '';\n    const specialChars = ['`', '*', '_', '~', '|', '['];\n\n    while (this.pos < this.text.length) {\n      const char = this.peek();\n      const nextChar = this.peek(1);\n\n      // Check for special formatting start\n      if (specialChars.includes(char) && char === nextChar) {\n        break;\n      }\n\n      // Check for inline code block start\n      if (char === '`') {\n        break;\n      }\n\n      // Check for link start\n      if (char === '[' && this.isValidLinkStart()) {\n        break;\n      }\n\n      content += this.consume();\n    }\n\n    if (content) {\n      this.tokens.push({\n        type: 'text',\n        content,\n      });\n    }\n  }\n\n  private parseNewline(): void {\n    this.consume();\n    this.tokens.push({\n      type: 'newline',\n      content: '\\n',\n    });\n  }\n\n  private parseCodeBlock(): void {\n    this.consume(3); // Skip ```\n    const language = this.readUntil('\\n');\n    this.consume(); // Skip \\n\n    const content = this.readUntil('```');\n    this.consume(3); // Skip closing ```\n\n    this.tokens.push({\n      type: 'pre',\n      content: content.trim(),\n      language: language.trim(),\n    });\n  }\n\n  private parseInlineCode(): void {\n    this.consume(); // Skip `\n    const content = this.readUntil('`');\n    this.consume(); // Skip closing `\n\n    this.tokens.push({\n      type: 'code',\n      content,\n    });\n  }\n\n  private parseLink(): void {\n    // Skip [\n    this.consume();\n    const text = this.readUntil(']');\n    // Skip ](\n    this.consume(2);\n    const link = this.readUntil(')');\n    // Skip )\n    this.consume();\n\n    const formatUrl = (rawUrl: string): string => {\n      if (rawUrl.includes('://')) return rawUrl;\n      if (rawUrl.includes('@')) return `mailto:${rawUrl}`;\n\n      return `https://${rawUrl}`;\n    };\n\n    const url = formatUrl(link);\n\n    this.tokens.push({\n      type: 'link',\n      content: text,\n      url,\n    });\n  }\n\n  private isValidLinkStart(): boolean {\n    // Look ahead to check if this is a valid link pattern\n    let i = this.pos;\n\n    // Skip [\n    if (this.text[i] !== '[') return false;\n    i++;\n\n    // Find closing ]\n    while (i < this.text.length && this.text[i] !== ']') {\n      if (this.text[i] === '\\n') return false; // Links can't contain newlines\n      i++;\n    }\n    if (i >= this.text.length) return false;\n\n    // Check for (\n    i++;\n    if (i >= this.text.length || this.text[i] !== '(') return false;\n\n    return true;\n  }\n\n  private tokensToHtml(): string {\n    return this.tokens.map((token) => {\n      switch (token.type) {\n        case 'pre':\n          return token.language\n            ? `<pre data-language=\"${token.language}\">${token.content}</pre>`\n            : `<pre>${token.content}</pre>`;\n        case 'code':\n          return `<code>${token.content}</code>`;\n        case 'bold':\n          return `<b>${token.content}</b>`;\n        case 'italic':\n          return `<i>${token.content}</i>`;\n        case 'strike':\n          return `<s>${token.content}</s>`;\n        case 'spoiler':\n          return `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${token.content}</span>`;\n        case 'link':\n          return `<a href=\"${token.url}\">${token.content}</a>`;\n        case 'emoji':\n          return `<img alt=\"${token.content}\" data-document-id=\"${token.documentId}\">`;\n        case 'text':\n          return token.content;\n        case 'newline':\n          return '\\n';\n        default:\n          return '';\n      }\n    }).join('');\n  }\n}\n\nexport default MarkdownParser;\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport MarkdownParser from './MarkdownParser';\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MAX_TAG_DEEPNESS = 3;\n\nexport default function parseHtmlAsFormattedText(\n  html: string, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = skipMarkdown ? html : (new MarkdownParser(html)).parse();\n  fixImageContent(fragment);\n  const text = fragment.innerText.trim().replace(/\\u200b+/g, '');\n  const trimShift = fragment.innerText.indexOf(text[0]);\n  let textIndex = -trimShift;\n  let recursionDeepness = 0;\n  const entities: ApiMessageEntity[] = [];\n\n  function addEntity(node: ChildNode) {\n    if (node.nodeType === Node.COMMENT_NODE) return;\n    const { index, entity } = getEntityDataFromNode(node, text, textIndex);\n\n    if (entity) {\n      textIndex = index;\n      entities.push(entity);\n    } else if (node.textContent) {\n      // Skip newlines on the beginning\n      if (index === 0 && node.textContent.trim() === '') {\n        return;\n      }\n      textIndex += node.textContent.length;\n    }\n\n    if (node.hasChildNodes() && recursionDeepness <= MAX_TAG_DEEPNESS) {\n      recursionDeepness += 1;\n      Array.from(node.childNodes).forEach(addEntity);\n    }\n  }\n\n  Array.from(fragment.childNodes).forEach((node) => {\n    recursionDeepness = 1;\n    addEntity(node);\n  });\n\n  return {\n    text,\n    entities: entities.length ? entities : undefined,\n  };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction getEntityDataFromNode(\n  node: ChildNode,\n  rawText: string,\n  textIndex: number,\n): { index: number; entity?: ApiMessageEntity } {\n  const type = getEntityTypeFromNode(node);\n\n  if (!type || !node.textContent) {\n    return {\n      index: textIndex,\n      entity: undefined,\n    };\n  }\n\n  const rawIndex = rawText.indexOf(node.textContent, textIndex);\n  // In some cases, last text entity ends with a newline (which gets trimmed from `rawText`).\n  // In this case, `rawIndex` would return `-1`, so we use `textIndex` instead.\n  const index = rawIndex >= 0 ? rawIndex : textIndex;\n  const offset = rawText.substring(0, index).length;\n  const { length } = rawText.substring(index, index + node.textContent.length);\n\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        url: (node as HTMLAnchorElement).href,\n      },\n    };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        userId: (node as HTMLAnchorElement).dataset.userId!,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.Pre) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        language: (node as HTMLPreElement).dataset.language,\n      },\n    };\n  }\n\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return {\n      index,\n      entity: {\n        type,\n        offset,\n        length,\n        documentId: (node as HTMLImageElement).dataset.documentId!,\n      },\n    };\n  }\n\n  return {\n    index,\n    entity: {\n      type,\n      offset,\n      length,\n    },\n  };\n}\n\nfunction getEntityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","Set","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","target","closest","has","preventDefault","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","saveState","saveHistoryState","clearState","clearHistoryState","history","setHistory","entries","timestamp","currentIndex","maxEntries","getRootLengthOffset","root","offset","getSelection","selection","isRoot","endContainer","path","endOffset","getNodePath","contains","parent","parentNode","index","unshift","setSelectionToEnd","lastChild","newRange","createRange","setStartAfter","removeAllRanges","addRange","updateSelection","firstChild","setPosition","findNodeByPath","setEntry","entry","requestNextMutation","canUndo","canRedo","undo","prev","lastEntry","currentHtml","redo","newEntries","shift","processKeyboardShortcuts","ctrlKey","metaKey","key","shiftKey","processKeyboardTriggers","handleKeyDown","currentState","useEditorHistory","dispatchEvent","Event","bubbles","handleBeforeApplyTextFormat","insertHtmlAndUpdateCursor","newHtml","inInputId","messageInput","getElementById","rangeCount","selectionRange","getRangeAt","isSelectionInsideInput","insertHtmlInSelection","focusEditableElement","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","EDITABLE_INPUT_CSS_SELECTOR","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","execCommand","tempInput","contentEditable","top","element","textLength","range","setStart","setEnd","removeChild","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleEmojiSelect","isForce","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","beforeApplyTextFormat","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","isSavedDialog","isPrivateChat","user","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isBasicGroup","isChatBasicGroup","isSuperGroup","DeleteChatModal","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","chatTitle","getChatTitle","handleDeleteForAll","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isText","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","DotAnimation","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","LastMessageMeta","outgoingStatus","draftDate","shouldUseDraft","MessageOutgoingStatus","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isVisible","isGif","Keys","NothingFound","description","peerColor","noUserColors","shoudReset","emojiIconClassName","children","otherProps","_extends","getApiPeerColorClass","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","forceShowSelf","isSynced","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","styles","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","iconEmojiId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingUser","typingUserName","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getPeerTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","opacity","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","dpr","useDevicePixelRatio","customEmoji","useCustomEmoji","previewMediaHash","getStickerMediaHash","previewUrl","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","useThrottleForHeavyAnimation","preloadImage","then","updateCanvas","clearRect","save","translate","drawImage","restore","tintColor","isLottie","globalCompositeOperation","fillRect","updateCanvasAfterHeavyAnimation","updateCanvasSize","parentWidth","parentHeight","handleResize","contentRect","useResizeObserver","container","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","split","digit","effectSticker","randomEffect","random","hash","effectHash","column","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","ChatFolderModal","MuteChatModal","ChatCallStatus","lastMessageId","selectChatLastMessageId","lastMessage","selectChatLastMessage","isOutgoing","savedDialogSender","fromId","messageSender","lastMessageSender","replyToMessageId","getMessageReplyInfo","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","currentChatId","currentThreadId","isSelectedForum","forumPanelChatId","lastMessageTopic","selectThreadParam","topicsInfo","selectTopicsInfo","lastMessageStory","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","folderId","isPinned","offsetTop","onDragEnter","openChat","toggleChatInfo","focusLastMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatetefulContent","getIsForumPanelClosed","selectIsForumPanelClosed","forceOnHeavyAnimation","force","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","withPortalForMenu","withStoryGap","subscriptionUntil","StoryViewerOrigin","ChatList","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","hasMiniApp","wasTopicOpened","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","unreadCount","shouldBeMuted","hasUnmutedUnreadTopics","hasUnreadMark","isSignal","isUnread","ShowTransition","isCustom","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","AnimatedCounter","formatIntegerCompact","pinnedElement","miniAppButton","pill","visiblePinnedElement","elements","renderContent","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","archiveSettings","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","useFolderManagerForUnreadCounters","archiveUnreadCount","chatsCount","previewItems","arr","unread","actionMinimize","isMinimized","handler","actionExpand","actionHide","isHidden","compact","minimized","buttonClassName","info","Badge","avatarWrapper","chatsPreview","folderType","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","foldersDispatch","onSettingsScreenSelect","handleEditFolder","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","UnconfirmedSession","sessions","onHeightChange","changeSessionSettings","terminateAuthorization","borderBoxSize","blockSize","firstUnconfirmed","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","handleAccept","isConfirmed","handleReject","RESERVED_HOTKEYS","canDisplayArchive","onLeftColumnContentChange","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","ALL_FOLDER_ID","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","IS_MAC_OS","isArchiveInList","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","rect","currentTarget","clientY","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","event","scrollHeight","deltaY","passive","useTopOverscroll","InfiniteScroll","itemSelector","preloadBackwards","withAbsolutePositioning","beforeChildren","maxHeight","onLoadMore","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","Loading","ICON_SIZE","canManageTopics","EmptyForum","openCreateTopicPanel","handleCreateTopic","centered","buttonText","lastReadInboxMessageId","selectTopics","canDelete","selectCanDeleteTopic","Topic","deleteTopic","setViewForumAsMessages","isClosed","handleOpenDeleteModal","handleOpenTopic","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","actionUnreadMark","actionPin","actionMute","actionCloseTopic","actionDelete","useTopicContextActions","confirmIsDestructive","confirmLabel","ForumPanel","onTopicSearch","onOpenAnimationStart","openChatWithInfo","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","useOnIntersect","getOrderedTopics","orderedPinnedTopicIds","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","TOPIC_HEIGHT_PX","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","renderTopics","GENERAL_TOPIC_ID","useChatAnimationType","orderDiffs","numberOfUp","numberOfDown","Infinity","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleOpenTopicMouseDown","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","offsetWidth","mainColumnWidth","abs","ANIMATION_DURATION","isAction","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","actionTargetUsers","renderLastMessageOrTyping","isDraftReplyToTopic","isEmptyLocalReply","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","isApiPeerChat","senderName","getMessageSenderName","messageSummary","inChatList","renderSummary","ANIMATION_END_DELAY","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","orderById","prevOrderById","mapValues","order","getSenderName","senderId","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","relatedTarget","toTarget","baseVal","useEffectOnce","onDrop","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","load","recalculatePositionAndSize","play","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleChange","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","onChange","onKeyDown","isComposing","altKey","baseNode","anchorNode","formattedTags","specialTags","specialTagClasses","isFormattedNode","isInSpecialTag","isAtEnd","isLastNode","nextSibling","Node","TEXT_NODE","escapeNode","insertBefore","checkStuckInsideSpecialTags","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","beforeApply","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","iterations","parentElement","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","AnimatedSticker","onEnded","Photo","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","clickArg","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","useShowTransition","noMountTransition","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","RoundVideo","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","SponsoredMessageContextMenu","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","SponsoredMessageContextMenuContainer","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","Video","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openUrl","openTelegramLink","stickersRef","giftStickersRef","handleMediaClick","handleContainerClick","handleOpenTelegramLink","hasCustomColor","isWithTextColor","documents","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","PeerColorWrapper","BaseStory","gift","getStickerFromGift","attributes","getGiftAttributes","backdrop","pattern","model","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","renderStarGiftUnique","shouldSkipModal","isEmoji","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","dark","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isLocked","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","staticIcon","isAnimationLoaded","markAnimationLoaded","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","isWithPaidReaction","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","availableReaction","isInactive","canSendReaction","sortedReactions","sortReactions","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","selectCurrentChat","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","renderOverviewItemValue","change","isChangeNegative","toggleStoriesHidden","useStoryPreloader","isDense","StoryRibbon","preventMessageInputBlurWithBubbling","handleSavedStories","profileTab","handleArchivedStories","handleOpenChat","handleOpenProfile","handleArchivePeer","hasUnreadStories","name_hasUnreadStory","contextMenu","orderedPeerIds","active","archived","isClosing","hidden","closing","useHorizontalScroll","StoryRibbonButton","byPeerId","isRibbonShown","isArchivedRibbonShown","peerStories","canShow","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","buildStyle","effectSize","shouldPause","ownProps","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","noPlay","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","appConfig","DEFAULT_LIMITS","limits","selectPremiumLimit","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","PEER_ID_QUEUE","loadFromQueue","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","pollablePeerIds","lastPollingTime","isStatusAvailable","isContact","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","mode","selectTemp","selectedChatIds","selectedChatTypes","includedChatIds","includeFilters","pick","folder","excludedChatIds","excludeFilters","getSuggestedFolderName","filters","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","foldersReducer","omit","isChatList","useFoldersReducer","useReducer","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","toggleChatArchived","toggleChatUnread","IS_ELECTRON","togglePinned","actionAddToFolder","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isInFolder","loadStoryThrottled","throttled","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","IGNORE_TAGS","createCallbackManager","hotkeys","addCallback","shouldFireEvent","hotkey","ctrl","meta","mod","pressedKey","isExactHotkey","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","runCallbacks","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","isCurrentPresent","isPrevPresent","reducer","initialState","reducerRef","dispatch","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSubmit","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","request","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageEl","LUMA_THRESHOLD","ratio","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","parse","pos","char","peek","parseNewline","parseCodeBlock","parseInlineCode","parseSpoiler","parseBold","parseItalic","parseStrike","parseCustomEmoji","isValidLinkStart","parseLink","parseText","tokensToHtml","n","consume","readUntil","delimiter","tokens","specialChars","nextChar","rawUrl","token","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MAX_TAG_DEEPNESS","skipMarkdown","MarkdownParser","fixImageContent","textIndex","recursionDeepness","addEntity","COMMENT_NODE","rawText","Email","Phone","getEntityTypeFromNode","rawIndex","getEntityDataFromNode","hasChildNodes","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","deleteContents","createContextualFragment","lastInsertedNode","insertNode","setEndAfter","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","removeAllSelections","fileSelector","accept","noMultiple","onchange","isElementInViewport","windowHeight"],"sourceRoot":""}